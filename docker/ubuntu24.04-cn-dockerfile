FROM ghcr.io/falcon-infra/falconfs-dev:ubuntu24.04 AS builder

# 环境变量
ENV TZ=Asia/Shanghai \
    LANG=en_US.UTF-8 \
    LANGUAGE=en_US:en \
    LC_ALL=en_US.UTF-8 \
    FALCONFS_DIR=/root/code/falconfs \
    LD_LIBRARY_PATH=/usr/local/obs/lib

# 创建工作目录
WORKDIR /root/code
RUN mkdir -p falconfs
COPY . ./falconfs/
WORKDIR ${FALCONFS_DIR}

# 构建FalconFS
RUN ${FALCONFS_DIR}/patches/apply.sh && \
    ${FALCONFS_DIR}/build.sh clean && \
    ${FALCONFS_DIR}/build.sh build pg && ./build.sh install && \
    ${FALCONFS_DIR}/build.sh build falcon --with-zk-init --with-prometheus

# 准备运行时文件
RUN apt install jq moreutils -y
RUN mkdir -p /output/store/falconfs/{bin,lib} && \
    mkdir -p /output/cn /output/dn && \
    # 复制库文件
    ${FALCONFS_DIR}/cloud_native/docker_build/ldd_copy.sh -b /root/metadb/lib/postgresql/falcon.so -t /output/store/falconfs/lib/ && \
    ${FALCONFS_DIR}/cloud_native/docker_build/ldd_copy.sh -b ${FALCONFS_DIR}/build/bin/falcon_client -t /output/store/falconfs/lib/ && \
    # 复制二进制文件
    cp -f ${FALCONFS_DIR}/build/bin/falcon_client /output/store/falconfs/bin/ && \
    # 复制metadb和falcon_cm
    cp -rf /root/metadb /output/cn/ && \
    cp -rf /root/metadb /output/dn/ && \
    cp -rf ${FALCONFS_DIR}/cloud_native/falcon_cm /output/cn/ && \
    cp -rf ${FALCONFS_DIR}/cloud_native/falcon_cm /output/dn/ && \
    # 生成配置文件
    cp -f ${FALCONFS_DIR}/config/config.json /output/store/ && \
    jq '.main.falcon_log_dir = "/opt/log"' /output/store/config.json | sponge /output/store/config.json && \
    jq '.main.falcon_cache_root = "/opt/falcon"' /output/store/config.json | sponge /output/store/config.json && \
    jq '.main.falcon_mount_path = "/mnt/data"' /output/store/config.json | sponge /output/store/config.json && \
    jq '.main.falcon_log_reserved_num = 50' /output/store/config.json | sponge /output/store/config.json && \
    jq '.main.falcon_log_reserved_time = 168' /output/store/config.json | sponge /output/store/config.json && \
    jq '.main.falcon_stat_max = true' /output/store/config.json | sponge /output/store/config.json && \
    jq '.main.falcon_use_prometheus = true' /output/store/config.json | sponge /output/store/config.json && \
    # 设置权限
    chmod -R 777 /output/cn/metadb && \
    chmod -R 777 /output/cn/falcon_cm && \
    chmod -R 777 /output/dn/metadb && \
    chmod -R 777 /output/dn/falcon_cm && \
    chmod -R 777 /output/store/falconfs

# 运行时镜像
FROM ubuntu:24.04
RUN apt update && echo -e "Asia\nShanghai" | apt-get install -y tzdata && \
    apt install -y locales && locale-gen en_US.UTF-8

ENV TZ=Asia/Shanghai \
    LANG=en_US.UTF-8 \
    LANGUAGE=en_US:en \
    LC_ALL=en_US.UTF-8
RUN apt update && apt install -y gdb vim tar python3 python3-pip libreadline-dev liblz4-dev libzstd-dev libssl-dev

# 创建非root用户
ARG USER_NAME=falconMeta
RUN useradd -m -s /bin/bash $USER_NAME
USER $USER_NAME

# 复制文件到用户目录
COPY --chown=$USER_NAME:$USER_NAME --from=builder /output/cn/metadb/ /home/falconMeta/metadb/
COPY --chown=$USER_NAME:$USER_NAME --from=builder /output/cn/falcon_cm/ /home/falconMeta/falcon_cm/
COPY --chown=$USER_NAME:$USER_NAME --from=builder /output/store/falconfs/bin/falcon_client /home/falconMeta/metadb/bin/
COPY --chown=$USER_NAME:$USER_NAME --from=builder /output/store/falconfs/lib/ /home/falconMeta/metadb/lib/
COPY --chown=$USER_NAME:$USER_NAME --from=builder /output/store/config.json /home/falconMeta/

# 复制脚本文件
COPY --chown=$USER_NAME:$USER_NAME --from=builder /root/code/falconfs/cloud_native/docker_build/cn/docker-entrypoint.sh /home/falconMeta/
COPY --chown=$USER_NAME:$USER_NAME --from=builder /root/code/falconfs/cloud_native/docker_build/cn/start.sh /home/falconMeta/
COPY --chown=$USER_NAME:$USER_NAME --from=builder /root/code/falconfs/cloud_native/docker_build/cn/stop.sh /home/falconMeta/
COPY --chown=$USER_NAME:$USER_NAME --from=builder /root/code/falconfs/cloud_native/docker_build/cn/check_liveness.sh /home/falconMeta/
COPY --chown=$USER_NAME:$USER_NAME --from=builder /root/code/falconfs/cloud_native/docker_build/cn/rm_logs.sh /home/falconMeta/

# 创建必要的目录
RUN mkdir -p /home/falconMeta/readiness/ /home/falconMeta/data/

# 环境变量
ENV PATH=/home/falconMeta/metadb/bin/:$PATH
ENV LD_LIBRARY_PATH=/home/falconMeta/metadb/lib/
ENV TMOUT=0

# 安装Python依赖
RUN pip3 install --break-system-packages psycopg2 && \
    pip3 install --break-system-packages kazoo && \
    pip3 install --break-system-packages requests

# 设置脚本权限
RUN chmod +x /home/falconMeta/docker-entrypoint.sh

# 设置工作目录和入口点
WORKDIR /home/falconMeta
ENTRYPOINT ["/home/falconMeta/docker-entrypoint.sh"]
